specify Sphec\Matchers\HaveReceivedMatcher
  when simply matching with no chained methods
    describe matches
      let double = test_double('test', ['legal_method' => true, 'other_method' => true]);
      let matcher = new Sphec\Matchers\HaveReceivedMatcher(@double);
      let subject = @matcher->matches('legal_method');

      it returns a falsey value when a legal method on a test double has not been called
        expect(@subject)->not_to_succeed_matching();

      it returns a truthy value when a legal method on a test double has been called once
        @double->legal_method();
        expect(@subject)->to_succeed_matching();

      it returns a truthy value when a legal method on a test double has been called more than once
        @double->legal_method();
        @double->legal_method();
        expect(@subject)->to_succeed_matching();

      it returns a falsey value when a different legal method on a test double has been called
        @double->other_method();
        expect(@subject)->not_to_succeed_matching();

    describe failure_message
      // TODO

    describe failure_message_when_negated
      // TODO

  when chained with once
    describe matches
      let double = test_double('test', ['legal_method' => true, 'other_method' => true]);
      let matcher = new Sphec\Matchers\HaveReceivedMatcher(@double);
      let subject = @matcher->matches('legal_method')->once();

      it returns a falsey value when a legal method on a test double has not been called
        expect(@subject)->not_to_succeed_matching();

      it returns a truthy value when a legal method on a test double has been called once
        @double->legal_method();
        expect(@subject)->to_succeed_matching();

      it returns a truthy value when a legal method on a test double has been called more than once
        @double->legal_method();
        @double->legal_method();
        expect(@subject)->not_to_succeed_matching();

      it returns a falsey value when a different legal method on a test double has been called
        @double->other_method();
        expect(@subject)->not_to_succeed_matching();

    describe failure_message
      // TODO

    describe failure_message_when_negated
      // TODO
